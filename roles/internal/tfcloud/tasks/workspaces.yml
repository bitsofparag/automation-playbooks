---
# tasks file for roles/internal/tfc (manage workspaces)
# References:
# 1. https://www.terraform.io/docs/cloud/api/index.html#authentication
# 2. https://www.terraform.io/docs/cloud/api/workspaces.html
# 3. https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html
# 4. https://docs.ansible.com/ansible/latest/modules/set_fact_module.html#examples

- name: Tfc* INCLUDE TASKS set-facts needed for managing workspaces
  include_tasks:
    file: "{{playbook_dir}}/../roles/internal/tfcloud/tasks/set-facts.yml"
    apply:
      tags:
        - tfc_workspace_new
        - tfc_workspace_edit
        - tfc_workspace_remove
        - tfc_base_workspaces_new
        - tfc_base_workspaces_remove
  tags:
    - tfc_workspace_new
    - tfc_workspace_edit
    - tfc_workspace_remove
    - tfc_base_workspaces_new
    - tfc_base_workspaces_remove


# Tasks for managing the base workspaces
- name: Tfc* SET_FACT template variables common to all workspaces
  when: tfc_workspace_name == "" and (tfc_app_workspaces|length > 0 or tfc_data_coll_workspaces|length > 0)
  set_fact:
    cacheable: yes
    source_repo_name: "ops"
  tags:
    - tfc_base_workspaces_new
    - tfc_base_workspaces_remove


- name: Tfc* CREATE all the app workspaces
  when: tfc_workspace_name == "" and (tfc_app_workspaces|length > 0 or tfc_data_coll_workspaces|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces"
    method: POST
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    body: "{{ item }}"
    body_format: "json"
    status_code: [201, 200, 422]
    return_content: yes
  with_items: "{{ tfc_workspace_template }}"
  tags:
    - tfc_base_workspaces_new


- name: Tfc* REMOVE all app workspaces
  when: tfc_workspace_name == "" and (tfc_app_workspaces|length > 0 or tfc_data_coll_workspaces|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces/{{ item.data.attributes.name }}"
    method: DELETE
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
    status_code: [200, 404]
    return_content: yes
  with_items: "{{ tfc_workspace_template }}"
  tags:
    - tfc_base_workspaces_remove


# Tasks for managing one workspace
- name: Tfc* SET_FACT variables for workspace template used in POST body for workspace api
  when: project_git_provider == "gitlab_hosted" and tfc_workspace_name != ""
  set_fact:
    cacheable: yes
    workspace_name: "{{ tfc_workspace_name }}-{{ deploy_environment }}"
    source_repo_name: "ops"
    working_directory: "deploy/{{ tfc_workspace_name }}"
  tags:
    - tfc_workspace_new
    - tfc_workspace_edit


- name: Tfc* CREATE workspace "{{ tfc_workspace_name }}"
  when: tfc_workspace_name is defined and tfc_workspace_name != ""
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces"
    method: POST
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    body: "{{ tfc_workspace_template }}"
    body_format: 'json'
    status_code: [201, 200, 422]
    return_content: yes
  register: response
  tags:
    - tfc_workspace_new


- name: Tfc* EDIT workspace "{{ tfc_workspace_name }}"
  when: tfc_workspace_name is defined and tfc_workspace_name != ""
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces/{{ tfc_workspace_name }}-{{ deploy_environment }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    body: "{{ tfc_workspace_template }}"
    body_format: 'json'
    status_code: [201, 200, 422]
    return_content: yes
  register: response
  tags:
    - tfc_workspace_edit


- name: Tfc* REMOVE workspace "{{ tfc_workspace_name }}"
  when: tfc_workspace_name is defined and tfc_workspace_name != ""
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces/{{ tfc_workspace_name }}-{{ deploy_environment }}"
    method: DELETE
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    status_code: [200, 404]
    return_content: yes
  register: response
  tags:
    - tfc_workspace_remove
