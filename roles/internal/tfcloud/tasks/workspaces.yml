---
# tasks file for roles/internal/tfc (manage workspaces)
# References:
# 1. https://www.terraform.io/docs/cloud/api/index.html#authentication
# 2. https://www.terraform.io/docs/cloud/api/workspaces.html
# 3. https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html
# 4. https://docs.ansible.com/ansible/latest/modules/set_fact_module.html#examples

- name: Tfc* INCLUDE TASKS set-facts needed for managing workspaces
  include_role:
    name: tfcloud
    tasks_from: set-facts
    apply:
      tags:
        - tfc_workspace_new
        - tfc_workspace_tags_new
        - tfc_workspace_edit
        - tfc_workspace_remove
        - tfc_workspace_debug
        - tfc_base_workspaces_new
        - tfc_base_workspaces_tags_new
        - tfc_base_workspaces_remove
  tags:
    - tfc_workspace_new
    - tfc_workspace_tags_new
    - tfc_workspace_edit
    - tfc_workspace_remove
    - tfc_workspace_debug
    - tfc_base_workspaces_new
    - tfc_base_workspaces_tags_new
    - tfc_base_workspaces_remove


# --------------------------------------------
# Tasks for managing the base workspaces
# --------------------------------------------
- name: Tfc* CREATE all the base workspaces
  when: (tfc_base_workspaces is defined and tfc_base_workspaces|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces"
    method: POST
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    body: "{{ item }}"
    body_format: "json"
    status_code: [201, 200, 422]
    return_content: yes
  with_items: "{{ tfc_workspace_template }}"
  tags:
    - tfc_base_workspaces_new

- name: Tfc* CREATE tags for all the base workspaces
  when: (workspace_names_list|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/workspaces/{{ item.id }}/relationships/tags"
    method: POST
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    body:
      data:
        - type: "tags"
          attributes:
            name: "{{ deploy_environment }}"
        - type: "tags"
          attributes:
            name: "{{ item.name|replace('-'+deploy_environment, '') }}"
    body_format: "json"
    status_code: [204, 200, 422]
    return_content: yes
  with_items: "{{ workspace_names_list }}"
  tags:
    - tfc_base_workspaces_tags_new

- name: Tfc* REMOVE all app workspaces
  when: (tfc_base_workspaces is defined and tfc_base_workspaces|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces/{{ item.data.attributes.name }}"
    method: DELETE
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
    status_code: [200, 204, 404]
    return_content: yes
  with_items: "{{ tfc_workspace_template }}"
  tags:
    - tfc_base_workspaces_remove


# --------------------------------------------
# Tasks for managing one workspace
# --------------------------------------------
- name: Tfc* SET_FACT variables for workspace template used in POST body for workspace api
  when: tfc_workspace_name != ""
  set_fact:
    cacheable: yes
    _workspace_name: "{{ tfc_workspace_name }}-{{ deploy_environment }}"
  tags:
    - tfc_workspace_new
    - tfc_workspace_edit
    - tfc_workspace_remove


- name: Tfc* CREATE workspace "{{ tfc_workspace_name }}"
  when: tfc_workspace_name is defined and tfc_workspace_name != "" and tfc_workspace_metadata_items is defined
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces"
    method: POST
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    body: "{{ tfc_workspace_template }}"
    body_format: 'json'
    status_code: [201, 200, 422]
    return_content: yes
  tags:
    - tfc_workspace_new

- name: Tfc* CREATE tags for workspace "{{ tfc_workspace_name }}"
  when: tfc_workspace_name is defined and tfc_workspace_name != ""
  uri:
    url: "https://app.terraform.io/api/v2/workspaces/{{ workspace_id }}/relationships/tags"
    method: POST
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    body:
      data:
        - type: "tags"
          attributes:
            name: "{{ deploy_environment }}"
        - type: "tags"
          attributes:
            name: "{{ tfc_workspace_name }}"
    body_format: "json"
    status_code: [204, 200, 422]
    return_content: yes
  tags:
    - tfc_workspace_tags_new

- name: Tfc* EDIT workspace "{{ tfc_workspace_name }}"
  when: tfc_workspace_name is defined and tfc_workspace_name != ""
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces/{{ _workspace_name }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    body: "{{ tfc_workspace_template }}"
    body_format: "json"
    status_code: [201, 200, 422]
    return_content: yes
  tags:
    - tfc_workspace_edit


- name: Tfc* REMOVE workspace "{{ tfc_workspace_name }}"
  when: tfc_workspace_name is defined and tfc_workspace_name != ""
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces/{{ _workspace_name }}"
    method: DELETE
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    status_code: [200, 204, 404]
    return_content: yes
  tags:
    - tfc_workspace_remove


# --------------------------------------------
# Deployment tasks
# --------------------------------------------
- name: Tfc* DEPLOY workspace "{{ tfc_workspace_name }}"
  when: tfc_workspace_name is defined and tfc_workspace_name != ""
  pause:
    prompt: |
      Please trigger a run from "{{tfc_workspace_name}}-{{deploy_environment}}"

      Press Enter when completed:
  tags:
    - tfc_workspace_deploy
