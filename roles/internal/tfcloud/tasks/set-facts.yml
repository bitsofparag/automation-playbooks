---
- name: Tfc* INTERRUPT if "tfc_org_name" variable is NOT provided
  when: tfc_org_name is not defined or tfc_org_name == ""
  ansible.builtin.fail:
    msg: "Please provide an org name for all API calls. For e.g '-e tfc_org_name=foobar'"


# Get list of organizations
- name: Tfc* GET list of organizations
  when: tfc_org_name is defined and tfc_org_name != ""
  uri:
    url: "https://app.terraform.io/api/v2/organizations"
    method: GET
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    return_content: yes
  register: response


- name: Tfc* SET_FACT list of organizations as "org_list"
  set_fact:
    cacheable: yes
    org_list: "{{ response.json.data }}"


# Get list of oauth clients
- name: Tfc* GET list of oauth clients
  when: org_list is defined and (org_list|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/oauth-clients"
    method: GET
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    return_content: yes
  register: response


- name: Tfc* SET_FACT list of oauth clients as "oauth_client_list"
  when: response is defined and ('json' in response)
  set_fact:
    cacheable: yes
    oauth_client_list: "{{ response.json.data | default([]) }}"


- name: Tfc* DEBUG display the (first) fetched oauth client data
  when: oauth_client_list is defined
  vars:
    msg: |
      Oauth client ids: {{ oauth_client_list }}
  debug:
    msg: "{{ msg.split('\n') }}"


# default oauth client settings
- name: Tfc* SET_FACT first oauth client ID in response data as "oauth_client_id"
  when: tfc_oauth_client_id == "" and (oauth_client_list is defined and oauth_client_list|length == 1)
  set_fact:
    cacheable: yes
    oauth_client_id: "{{ oauth_client_list[0].id }}"


- name: Tfc* SET_FACT first oauth client TOKEN in response data as "oauth_token_id"
  when: tfc_oauth_client_id == "" and (oauth_client_list is defined and oauth_client_list|length == 1)
  set_fact:
    cacheable: yes
    oauth_token_id: "{{ oauth_client_list[0].relationships['oauth-tokens'].data[0].id }}"


# user-provided oauth client settings
- name: Tfc* SET_FACT user-provided oauth client ID as "oauth_client_id"
  when: tfc_oauth_client_id != ""
  set_fact:
    cacheable: yes
    oauth_client_id: "{{ tfc_oauth_client_id }}"


- name: Tfc* SET_FACT extract TOKEN from user-provided oauth client ID as "oauth_token_id"
  when: tfc_oauth_client_id != ""
  set_fact:
    cacheable: yes
    oauth_token_id: "{{ oauth_client_list | json_query(query) | first | default('') }}"
  vars:
    query: "[?id=='{{ tfc_oauth_client_id }}'].relationships['oauth-tokens'].data[0].id"


# List of SSH keys
- name: Tfc* GET list of ssh-keys for this user
  when: org_list is defined and (org_list|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/ssh-keys"
    method: GET
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    return_content: yes
  register: response


- name: Tfc* SET_FACT list of ssh keys as "ssh_keys_list"
  when: response is defined and 'json' in response
  set_fact:
    cacheable: yes
    ssh_keys_list: "{{ response.json.data | default([]) }}"


- name: Tfc* GET list of registry modules
  when: org_list is defined and (org_list|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/registry-modules"
    method: GET
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    return_content: yes
  register: response


- name: Tfc* SET_FACT list of registry modules as "modules_list"
  when: response is defined and 'json' in response
  set_fact:
    cacheable: yes
    modules_list: "{{ response.json.data | default([]) }}"


- name: Tfc* GET list of workspaces
  when: org_list is defined and (org_list|length > 0)
  uri:
    url: "https://app.terraform.io/api/v2/organizations/{{ tfc_org_name }}/workspaces"
    method: GET
    headers:
      Authorization: "Bearer {{ tfc_token }}"
      Content-Type: application/vnd.api+json
      Accept: application/json
    return_content: yes
  register: response


- name: Tfc* SET_FACT list of workspaces as "workspaces_list"
  when: response is defined and 'json' in response
  set_fact:
    cacheable: yes
    workspaces_list: "{{ response.json.data | default([]) }}"


- name: Tfc* SET_FACT workspace_id for requested workspace
  when: tfc_workspace_name is defined and tfc_workspace_name != "" and deploy_environment != ""
  set_fact:
    cacheable: yes
    workspace_id: "{{ workspaces_list | json_query(query) | first | default('') }}"
  vars:
    query: "[?attributes.name=='{{ tfc_workspace_name+'-'+deploy_environment }}'].id"


- name: Tfc* DEBUG display the workspace id
  when: tfc_workspace_name != "" and workspace_id is defined
  debug:
    var: workspace_id
